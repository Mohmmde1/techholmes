# Generated by Django 4.2.10 on 2024-02-20 05:00


from django.db import migrations, transaction
from django.utils.text import slugify

from faker import Faker
import random

from products.models import Category, Tag, Product


fake = Faker()

def reverse_products(apps, schema_editor):
    Product = apps.get_model('products', 'Product')
    Product.objects.all().delete()
    
def generate_products(apps, schema_editor):
    num_products = 100 
    categories = Category.objects.all()
    tags = list(Tag.objects.all())

    for _ in range(num_products):
        name = fake.company()
        description = fake.text()
        price = random.randint(10, 1000)
        category = random.choice(categories)
        
        # Generate a unique slug for the product
        slug = slugify(name)
        while Product.objects.filter(slug=slug).exists():
            slug = slugify(name + '-' + str(random.randint(1, 9999)))
        
        product = Product.objects.create(
            name=name,
            description=description,
            price=price,
            category=category,
            slug=slug
        )
        
        product.tags.set(random.sample(tags, random.randint(1, 3)))
        
class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_generate_initial_tags_categories'),
    ]

    operations = [
        migrations.RunPython(lambda apps, schema_editor: transaction.atomic()(generate_products)(apps, schema_editor), reverse_code=reverse_products),
    ]
